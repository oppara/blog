[{"content":"はじめに yaml から toml への変換ツールを探していて良さげなものを発見したので使ってみる。\n sclevine/yj: CLI - Convert between YAML, TOML, JSON, and HCL  インストール % brew install yj 使い方 標準入力から読み込ませてリダイレクトする感じ。\n% yj -yt -i \u0026lt; example.yaml \u0026gt; example.toml or\n% cat example.yaml | yj -yt -i \u0026gt; example.toml 環境 % sw_vers ProductName: macOS ProductVersion: 12.2 BuildVersion: 21D49 % yj -v v5.0.0 ","permalink":"https://d.oppara.tv/posts/2022/03/cli-yj/","summary":"はじめに yaml から toml への変換ツールを探していて良さげなものを発見したので使ってみる。 sclevine/yj: CLI - Convert between YAML, TOML, JSON, and HCL インストール % brew install yj 使い方 標準入力から読","title":"yaml, toml, json, hclの変換ツール yj"},{"content":"DNS の設定 d.oppara.tvの CNAME をoppara.github.ioに設定する。\n% dig d.oppara.tv @8.8.8.8 ... ;; ANSWER SECTION: d.oppara.tv. 3600 IN CNAME oppara.github.io. oppara.github.io. 3600 IN A 185.199.108.153 oppara.github.io. 3600 IN A 185.199.111.153 oppara.github.io. 3600 IN A 185.199.109.153 oppara.github.io. 3600 IN A 185.199.110.153 ... GitHub Actions を設定する GitHub Actions による GitHub Pages への自動デプロイ - Qiita\n変更箇所\n pull_request:を削除 hugo のバージョンを 0.94.0 に変更 publish_dir: ./publicを削除  gh-pages ブランチの直下にデプロイする。   cname option を設定  重要 設定しないとデプロイ時に Custom domain の設定が初期化され、URL にアクセスしても 404 になってしまう。    GitHub の設定 Settings -\u0026gt; Pages\n  ","permalink":"https://d.oppara.tv/posts/2022/03/hugo-github-pages/","summary":"DNS の設定 d.oppara.tvの CNAME をoppara.github.ioに設定する。 % dig d.oppara.tv @8.8.8.8 ... ;; ANSWER SECTION: d.oppara.tv. 3600 IN CNAME oppara.github.io. oppara.github.io. 3600 IN A 185.199.108.153 oppara.github.io. 3600 IN A 185.199.111.153 oppara.github.io. 3600 IN A 185.199.109.153 oppara.github.io. 3600","title":"Hugo で作成した記事を GitHub Pages で公開する"},{"content":"はじめに hugo vim editorで検索していたら以下の b4b4r07 さんの良さげなブログを発見。\nスムーズに Hugo でブログを書くツール | tellme.tokyo\n上記ブログで使用されている b4b4r07/blog を使用するには、以下の環境変数の設定が必要な模様。\n BLOG_ROOT: hugo new siteでできたディレクトリのパスを指定。 BLOG_POST_DIR: 記事を作成するディレクトリ。BLOG_ROOT からの相対パスを指定。  設定例 export BLOG_ROOT=\u0026#34;${HOME}/src/github.com/oppara/d.oppara.tv\u0026#34; export BLOG_POST_DIR=`date +\u0026#34;content/posts/%Y/%m\u0026#34;` blog new で作成される日付を JST にしたい The 力技。\ndiff --git a/cmd/new.go b/cmd/new.go index 4996bfb..85d597e 100644 --- a/cmd/new.go +++ b/cmd/new.go @@ -69,7 +69,7 @@ func (c *newCmd) run(args []string) error { Command: \u0026#34;hugo\u0026#34;, Args: []string{\u0026#34;new\u0026#34;, strings.TrimPrefix(next, \u0026#34;content/\u0026#34;)}, Dir: c.RootPath, - Env: map[string]string{}, + Env: map[string]string{\u0026#34;TZ\u0026#34;:\u0026#34;Asia/Tokyo\u0026#34;}, Stdin: os.Stdin, Stdout: ioutil.Discard, Stderr: ioutil.Discard, https://github.com/oppara/b4b4r07-blog/commit/1b653d83f0352d0bc06e9b1e737ec292c85989e1\n環境 % sw_vers ProductName: macOS ProductVersion: 12.2 BuildVersion: 21D49 % hugo version hugo v0.94.0+extended darwin/amd64 BuildDate=unknown ","permalink":"https://d.oppara.tv/posts/2022/03/hugo-blog-tool/","summary":"はじめに hugo vim editorで検索していたら以下の b4b4r07 さんの良さげなブログを発見。 スムーズに Hugo でブログを書くツール | tellme.tokyo 上記ブログで使用されている b4b4r07/blog","title":"スムーズに Hugo でブログを書くツール"},{"content":"問題 --editor オプション付きで hugo new すると以下のエラーになってしまう。\n% hugo new posts/2022/03/hoge/index.md --editor vim Content \u0026#34;/path/to/hugo/content/posts/2022/03/hoge/index.md\u0026#34; created Editing \u0026#34;/path/to/hugo/content/posts/2022/03/hoge/index.md\u0026#34; with \u0026#34;vim\u0026#34; ... Error: access denied: \u0026#34;vim\u0026#34; is not whitelisted in policy \u0026#34;security.exec.allow\u0026#34;; the current security configuration is: [security]  enableInlineShortcodes = false  [security.exec]  allow = [\u0026#39;^dart-sass-embedded$\u0026#39;, \u0026#39;^go$\u0026#39;, \u0026#39;^npx$\u0026#39;, \u0026#39;^postcss$\u0026#39;]  osEnv = [\u0026#39;(?i)^(PATH|PATHEXT|APPDATA|TMP|TEMP|TERM)$\u0026#39;]  [security.funcs]  getenv = [\u0026#39;^HUGO_\u0026#39;]  [security.http]  methods = [\u0026#39;(?i)GET|POST\u0026#39;]  urls = [\u0026#39;.*\u0026#39;] 対応方法 以下の設定を confg.toml に追加する。\n[security]  [security.exec]  allow = [\u0026#39;^vim$\u0026#39;] 環境 % sw_vers ProductName: macOS ProductVersion: 12.2 BuildVersion: 21D49 % hugo version hugo v0.93.3+extended darwin/amd64 BuildDate=unknown ","permalink":"https://d.oppara.tv/posts/2022/03/hugo-with-editor/","summary":"問題 --editor オプション付きで hugo new すると以下のエラーになってしまう。 % hugo new posts/2022/03/hoge/index.md --editor vim Content \u0026#34;/path/to/hugo/content/posts/2022/03/hoge/index.md\u0026#34; created Editing \u0026#34;/path/to/hugo/content/posts/2022/03/hoge/index.md\u0026#34; with \u0026#34;vim\u0026#34; ... Error: access denied: \u0026#34;vim\u0026#34; is not whitelisted in policy \u0026#34;security.exec.allow\u0026#34;; the current security configuration is: [security] enableInlineShortcodes = false [security.exec] allow = [\u0026#39;^dart-sass-embedded$\u0026#39;, \u0026#39;^go$\u0026#39;, \u0026#39;^npx$\u0026#39;, \u0026#39;^postcss$\u0026#39;]","title":"--editor オプション付きで hugo new するとエラーになる"},{"content":"Configure Hugo | Hugo\n日本語周り # デフォルトの言語設定 defaultContentLanguage = \u0026#34;ja\u0026#34;  # \u0026lt;language\u0026gt; エレメント用の値 languageCode = \u0026#34;ja\u0026#34;  # 日本語の文字数を正しく数えて、短いサマリーを表示できるようにする hasCJKLanguage = true  # リスト内のタイトルを複数化しない pluralizeListTitles = false  # timezone timeZone = \u0026#34;Asia/Tokyo\u0026#34; テーマ PaperMod の設定 [Params]  # 著者名  author = \u0026#34;oppara\u0026#34;   # 日付のフォーマット  dateformat = \u0026#34;2006-01-02\u0026#34;   # リストページに表示される投稿毎の要約を非表示にする  hideSummary = true   # リストページに1つめに表示される投稿のデザインを他の投稿のデザインと同じにする  disableSpecial1stPost = true   # 投稿ページで目次を表示する  ShowToc = true   # パン屑メニューを表示する  ShowBreadCrumbs = true   # 投稿ページの下部にナビゲーションリンクを表示する  ShowPostNavLinks = true 環境 % sw_vers ProductName: macOS ProductVersion: 12.2 BuildVersion: 21D49 % hugo version hugo v0.93.3+extended darwin/amd64 BuildDate=unknown ","permalink":"https://d.oppara.tv/posts/2022/03/hugo-config/","summary":"Configure Hugo | Hugo 日本語周り # デフォルトの言語設定 defaultContentLanguage = \u0026#34;ja\u0026#34; # \u0026lt;language\u0026gt; エレメント用の値 languageCode = \u0026#34;ja\u0026#34; # 日本語の文字数を正しく数えて、短いサマリーを表示できるようにする hasCJKLanguage","title":"Hugo の設定"},{"content":"はじめに Quick Start | Hugo\nとりあえずテーマをインストールしてコンテンツを表示するところまで。\nHugo のインストール % brew install hugo サイトの作成 % hugo new site d.oppara.tv テーマの追加 PaperMod というテーマを使ってみる。\n% cd d.oppara.tv % git init % git add . % git commit -m \u0026#39;feat: initial commit\u0026#39; % git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod % echo theme = \\\u0026#34;PaperMod\\\u0026#34; \u0026gt;\u0026gt; config.toml % git add . % git commit -m \u0026#39;fead: add theme\u0026#39; テーマの更新 % git submodule update --remote --merge テーマの削除 % git submodule deinit -f themes/PaperMod % git rm -f themes/PaperMod % rm -rf .git/modules/themes* コンテンツの作成 % hugo new posts/hoge.md % echo \u0026#39;hogehoge\u0026#39; \u0026gt;\u0026gt; content/posts/hoge.md .hugo_build.lockをバージョン管理外にする。\n% echo \u0026#39;.hugo_build.lock\u0026#39; \u0026gt; .gitignore % git add .gitignore % git commit -m \u0026#39;Add .gitignore\u0026#39; サーバの起動 % hugo server -D ブラウザで動作確認 % open http://localhost:1313/ 環境 % sw_vers ProductName: macOS ProductVersion: 12.2 BuildVersion: 21D49 % hugo version hugo v0.93.3+extended darwin/amd64 BuildDate=unknown ","permalink":"https://d.oppara.tv/posts/2022/03/hugo-quick-start/","summary":"はじめに Quick Start | Hugo とりあえずテーマをインストールしてコンテンツを表示するところまで。 Hugo のインストール % brew install hugo サイトの作成 % hugo new site d.oppara.tv テーマの追加","title":"Hugo 事始め"}]