<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>nextjs on d.oppara.tv</title><link>https://d.oppara.tv/tags/nextjs/</link><description>Recent content in nextjs on d.oppara.tv</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Mon, 20 Nov 2023 06:32:13 +0900</lastBuildDate><atom:link href="https://d.oppara.tv/tags/nextjs/index.xml" rel="self" type="application/rss+xml"/><item><title>Next.js で Basic 認証をかける</title><link>https://d.oppara.tv/posts/2023/11/nextjs-basic-auth/</link><pubDate>Mon, 20 Nov 2023 06:32:13 +0900</pubDate><guid>https://d.oppara.tv/posts/2023/11/nextjs-basic-auth/</guid><description>対応方法 middleware を使用する。 // middleware.ts import { NextResponse, NextRequest } from &amp;#39;next/server&amp;#39;; export const config = { // /hoge/ 以下のパスに対して Basic 認証をかける matcher: [&amp;#39;/hoge/:path*&amp;#39;], } export function middleware(req: NextRequest) { const basicAuth = req.headers.get(&amp;#39;authorization&amp;#39;); if (basicAuth) { const authValue = basicAuth.split(&amp;#39; &amp;#39;)[1]; const [user, password] = atob(authValue).split(&amp;#39;:&amp;#39;); if (user</description></item><item><title>Next.js で IP アドレスを使用したアクセス制限を行う</title><link>https://d.oppara.tv/posts/2023/11/nextjs-restrict-access-by-ip-address/</link><pubDate>Mon, 20 Nov 2023 06:22:12 +0900</pubDate><guid>https://d.oppara.tv/posts/2023/11/nextjs-restrict-access-by-ip-address/</guid><description>対応方法 middleware を使用する。 // middleware.ts import { NextResponse, NextRequest } from &amp;#39;next/server&amp;#39;; const validAddresses = new Set(); if (process.env.VALID_IP_ADDRESSES) { process.env.VALID_IP_ADDRESSES!.split(&amp;#39;,&amp;#39;).forEach((address) =&amp;gt; { validAddresses.add(address.trim()); }) } export function middleware(req: NextRequest) { let ip: string = req.ip ?? req.headers.get(&amp;#39;x-real-ip&amp;#39;) ?? &amp;#39;&amp;#39;; // with CDN or LB or next dev if (!ip &amp;amp;&amp;amp; req.headers.get(&amp;#39;x-forwarded-for&amp;#39;)) { ip = req.headers.get(&amp;#39;x-forwarded-for&amp;#39;)?.split(&amp;#39;,&amp;#39;)[0] ?? &amp;#39;&amp;#39;; } if (!validAddresses.has(ip)) {</description></item></channel></rss>